@page "/login"
@layout MainLayoutLogin
@rendermode InteractiveServer
@inject PageTitleService PageTitleService
@inject IHttpContextAccessor HttpContextAccessor
@inject NavigationManager NavigationManager
@inject EnvironmentApp EnvApp
@inject AuthService AuthService
@attribute [StreamRendering]

<div class="container-xxl">
    <div class="row vh-100 d-flex justify-content-center">
        <div class="col-12 align-self-center">
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-4 mx-auto">
                        <div class="card">
                            <div class="card-body p-0 bg-white auth-header-box rounded-top">
                                <div class="text-center p-3">
                                    <a href="" class="logo logo-admin">
                                        <img src="/assets/images/logo-sm.png" height="80" alt="logo" class="auth-logo">
                                    </a>
                                    <h4 class="mt-3 mb-1 fw-semibold text-black fs-18">Utilisation de Facilys</h4>
                                    <p class="text-muted fw-medium mb-0">Connectez-vous pour continuer Facilys.</p>
                                </div>
                            </div>
                            <div class="card-body pt-0">
                                @if (!string.IsNullOrEmpty(errorMessage))
                                {
                                    <div class="alert alert-danger shadow-sm border-theme-white-2" role="alert">
                                        <div class="d-inline-flex justify-content-center align-items-center thumb-xs bg-danger rounded-circle mx-auto me-1">
                                            <i class="fas fa-xmark align-self-center mb-0 text-white "></i>
                                        </div>
                                        <strong>Oh oh oh!</strong> @errorMessage
                                    </div>
                                }
                                <EditForm FormName="login-form" Model="loginModel" OnValidSubmit="HandleValidSubmit" class="my-4">
                                    <div class="form-group mb-3">
                                        <label for="Email">Email</label>
                                        <InputText id="Email" class="form-control" @bind-Value="loginModel.Email" />
                                    </div>

                                    <div class="form-group mb-3">
                                        <label for="Password">Mot de passe</label>
                                        <InputText id="Password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                                    </div>

                                    <div class="form-group row mt-3">
                                        <div class="col-sm-6 text-end">
                                            <NavLink href="/PwRecovery" class="text-muted font-13">
                                                <i class="dripicons-lock"></i> Mot de passe oublié ?
                                            </NavLink>
                                        </div>
                                    </div>

                                    <div class="form-group mb-0 row">
                                        <div class="col-12">
                                            <div class="d-grid mt-3">
                                                <button class="btn btn-primary" type="submit">Connexion <i class="fas fa-sign-in-alt ms-1"></i></button>
                                            </div>
                                        </div><!--end col-->
                                    </div> <!--end form-group-->
                                </EditForm><!--end form-->
                            </div><!--end card-body-->
                        </div><!--end card-->
                    </div><!--end col-->
                </div><!--end row-->
            </div><!--end card-body-->
        </div><!--end col-->
    </div><!--end row-->
</div><!-- container -->
@code {
    private LoginModel loginModel = new();
    private string errorMessage;

    /// <summary>
    /// Cette méthode est liée à l'événement OnValidSubmit du formulaire EditForm.
    /// </summary>
    /// <returns></returns>
    private async Task HandleValidSubmit()
    {
        errorMessage = string.Empty;

        // Validation manuelle des champs
        if (string.IsNullOrWhiteSpace(loginModel.Email))
        {
            errorMessage = "L'email est requis.";
            // StateHasChanged();
            // await InvokeAsync(StateHasChanged);
            return;
        }

        if (string.IsNullOrWhiteSpace(loginModel.Password))
        {
            errorMessage = "Le mot de passe est requis.";
            return;
        }

        if (loginModel.Password.Length < 6)
        {
            errorMessage = "Le mot de passe doit contenir au moins 6 caractères.";
            return;
        }

        try
        {
            var user = await AuthService.AuthenticateAsync(loginModel.Email, loginModel.Password);
            if (user != null)
            {
                // Redirigez l'utilisateur vers une page protégée ou tableau de bord
                EnvApp.EmailUserConnect = user.Email;
                NavigationManager.NavigateTo("/dashboard", forceLoad: true);
                //NavigationManager.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = "Identifiants incorrects.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Une erreur est survenue : " + ex.Message;
        }
    }

    public class LoginModel
    {
        public string Email { get; set; } = "";
        public string Password { get; set; } = "";
    }

}