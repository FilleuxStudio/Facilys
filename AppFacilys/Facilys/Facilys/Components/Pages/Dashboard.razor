@page "/dashboard"
@rendermode InteractiveServer
@inject PageTitleService PageTitleService
@inject ApplicationDbContext DbContext
<PageTitle>Dashboard</PageTitle>

<!--header-->
<div class="row justify-content-center">
    <div class="col-md-6 col-lg-4">
        <div class="card">
            <div class="card-body">
                <div class="row d-flex justify-content-center border-dashed-bottom pb-3">
                    <div class="col-9">
                        <p class="text-dark mb-0 fw-semibold fs-14">Clients total</p>
                        <h3 class="mt-2 mb-0 fw-bold">@client</h3>
                    </div>
                    <div class="col-3 align-self-center">
                        <div class="d-flex justify-content-center align-items-center thumb-xl bg-light rounded-circle mx-auto">
                            <i class="iconoir-hexagon-dice h1 align-self-center mb-0 text-secondary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-lg-4">
        <div class="card">
            <div class="card-body">
                <div class="row d-flex justify-content-center border-dashed-bottom pb-3">
                    <div class="col-9">
                        <p class="text-dark mb-0 fw-semibold fs-14">Factures total</p>
                        <h3 class="mt-2 mb-0 fw-bold">@invoice</h3>
                    </div>
                    <div class="col-3 align-self-center">
                        <div class="d-flex justify-content-center align-items-center thumb-xl bg-light rounded-circle mx-auto">
                            <i class="iconoir-clock h1 align-self-center mb-0 text-secondary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-lg-4">
        <div class="card">
            <div class="card-body">
                <div class="row d-flex justify-content-center border-dashed-bottom pb-3">
                    <div class="col-9">
                        <p class="text-dark mb-0 fw-semibold fs-14">Véhicules total</p>
                        <h3 class="mt-2 mb-0 fw-bold">@vehicle</h3>
                    </div>
                    <div class="col-3 align-self-center">
                        <div class="d-flex justify-content-center align-items-center thumb-xl bg-light rounded-circle mx-auto">
                            <i class="iconoir-percentage-circle h1 align-self-center mb-0 text-secondary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Top-->
<div class="row">
    <div class="col-lg-6">
        <div class="card card-h-100">
            <div class="card-header">
                <div class="row align-items-center">
                    <div class="col">
                        <h4 class="card-title">Top 10 des voitures</h4>
                    </div>
                </div>
            </div>
            <div class="card-body pt-0">
                <div class="table-responsive browser_users">
                    <table class="table mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="border-top-0">Marque</th>
                                <th class="border-top-0">Modèle</th>
                                <th class="border-top-0">Année</th>
                                <th class="border-top-0">Réparation</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var topVehicle in TopVehicleData)
                            {
                                <tr>
                                    <td>@topVehicle.VehicleMark</td>
                                    <td>@topVehicle.VehicleModel</td>
                                    <td>@topVehicle.VehicleYear</td>
                                    <td>@topVehicle.RepairCount</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6">
        <div class="card card-h-100">
            <div class="card-header">
                <div class="row align-items-center">
                    <div class="col">
                        <h4 class="card-title">Top 10 des clients</h4>
                    </div>
                </div>
            </div>
            <div class="card-body pt-0">
                <div class="table-responsive">
                    <table class="table mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="border-top-0">Nom</th>
                                <th class="border-top-0">Prénom</th>
                                <th class="border-top-0">Réparation</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var topClient in TopClientData)
                            {
                                <tr>
                                    <td><a class="text-primary">@topClient.LastName</a></td>
                                    <td>@topClient.FirstName</td>
                                    <td>@topClient.RepairCount</td>
                                </tr>
                            }                 
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-md-6 col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="row align-items-center">
                    <div class="col">
                        <h4 class="card-title">
                            <p class="m-0 fs-12 fst-italic ps-2 text-muted">Dernières données mises à jour - il y a @DateTime.Now.Second Seconde<NavLink href="/" class="link-danger ms-1 "><i class="align-middle iconoir-refresh"></i></NavLink>
                            </p>
                        </h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    int client = 0;
    int vehicle = 0;
    int invoice = 0;

    List<TopVehicle> TopVehicleData = new();
    List<TopClient> TopClientData = new();

    protected override async void OnInitialized()
    {
        //StateHasChanged();
        //PageTitleService.CurrentTitle = "Dashboard";
        await InvokeAsync(() =>
        {
            PageTitleService.CurrentTitle = "Dashboard";
        });

        LoadDataHeader();
    }

    private async Task LoadDataHeader()
    {
        int client = await DbContext.Clients.CountAsync();
        int vehicle = await DbContext.Vehicles.CountAsync();
        int invoice = await DbContext.Invoices.CountAsync();

        var dataTopVehicle = await DbContext.HistoryParts
        .Where(h => h.Vehicle != null)
        .GroupBy(h => new { h.Vehicle.Id, h.Vehicle.Mark, h.Vehicle.Model, h.Vehicle.CirculationDate })
        .Select(g => new
        {
            VehicleId = g.Key.Id,
            VehicleMark = g.Key.Mark,
            VehicleModel = g.Key.Model,
            VehicleYear = g.Key.CirculationDate,
            RepairCount = g.Count()
        })
        .OrderByDescending(x => x.RepairCount)
        .Take(10)
        .ToListAsync();

        var dataTopClient = await DbContext.HistoryParts
           .Where(h => h.Vehicle != null || h.OtherVehicle != null)
           .GroupBy(h => new
           {
               Client = h.Vehicle != null ? h.Vehicle.Client : h.OtherVehicle.Client
           })
           .Select(g => new
           {
               ClientId = g.Key.Client.Id,
               LastName = g.Key.Client.Lname,
               FirstName = g.Key.Client.Fname,
               RepairCount = g.Count()
           })
       .OrderByDescending(x => x.RepairCount)
       .Take(10)
       .ToListAsync();

        foreach(var vehicleObject in dataTopVehicle)
        {
            TopVehicleData.Add(new TopVehicle()
                {
                    VehicleId = vehicleObject.VehicleId.ToString(),
                    VehicleMark = vehicleObject.VehicleMark,
                    VehicleModel = vehicleObject.VehicleModel,
                    VehicleYear = vehicleObject.VehicleYear,
                    RepairCount = vehicleObject.RepairCount,
                });
        }

        foreach (var clientObject in dataTopClient)
        {
            TopClientData.Add(new TopClient()
                {
                    ClientId = clientObject.ClientId.ToString(),
                    LastName = clientObject.LastName,
                    FirstName = clientObject.FirstName,
                    RepairCount = clientObject.RepairCount,
                });
        }

    }

    public class TopVehicle
    {
        public string VehicleId { get; set; }
        public string VehicleMark { get; set; }
        public string VehicleModel { get; set; }
        public DateTime VehicleYear { get; set; }
        public int RepairCount { get; set; }
    }
    public class TopClient
    {
        public string ClientId { get; set; }
        public string LastName { get; set; }
        public string FirstName { get; set; }
        public int RepairCount { get; set; }
    }

}