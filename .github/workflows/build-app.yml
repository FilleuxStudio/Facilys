name: Build and Deploy Electron.NET App

on:
  push:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            platform: win
            outputFolder: win-unpacked
            zipFile: app-win.zip
          - os: ubuntu-latest
            platform: linux
            outputFolder: linux-unpacked
            zipFile: app-linux.zip
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.13.0'
          check-latest: true 

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Prepare build environment
        run: |
          mkdir -p temp_build
          cp -r AppFacilys/Facilys/Facilys/ temp_build/
          ls -l temp_build
        shell: bash

      - name: Install Electron.NET CLI
        run: |
          dotnet tool install --global ElectronNET.CLI --version 23.6.2
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Add required packages
        working-directory: temp_build/Facilys
        run: |
          dotnet add package ElectronNET.API --version 23.6.2
          dotnet add package Newtonsoft.Json

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libgconf-2-4 p7zip-full

      - name: Build Electron app
        working-directory: temp_build/Facilys
        run: |
          dotnet restore
          electronize build /target ${{ matrix.platform }}

      - name: Package artifacts
        working-directory: temp_build/Facilys/bin/desktop
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            7z a -r ${{ matrix.zipFile }} ${{ matrix.outputFolder }}/*
          else
            powershell Compress-Archive -Path .\\${{ matrix.outputFolder }}\\* -DestinationPath .\\${{ matrix.zipFile }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: electron-${{ matrix.platform }}-build
          path: temp_build/Facilys/bin/desktop/${{ matrix.zipFile }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: electron-*-build
          path: artifacts

      - name: Deploy via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.PORT || 22 }}
          source: "artifacts/*.zip"
          target: "server/public/setup"