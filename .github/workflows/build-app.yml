name: Build and Deploy Electron.NET App

on:
  push:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            platform: win
            outputFolder: win-unpacked
          - os: ubuntu-latest
            platform: linux
            outputFolder: linux-unpacked
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            8.0.x

      - name: Prepare build environment
        run: |
          mkdir -p temp_build
          cp -r AppFacilys/Facilys/Facilys/ temp_build/
          echo "Structure du projet copiée :"
          ls -l temp_build
        shell: bash

      - name: Verify electron.manifest.json
        run: test -f temp_build/Facilys/electron.manifest.json || (echo "Fichier manifest manquant!" && exit 1)
        shell: bash

      - name: Install Electron.NET CLI
        run: |
          dotnet tool install --global ElectronNET.CLI --version 23.6.2
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Add Electron.NET dependencies
        working-directory: temp_build/Facilys
        run: |
          dotnet add package ElectronNET.API --version 23.6.2
          dotnet add package Newtonsoft.Json

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2t64 libgbm-dev build-essential

      - name: Build application
        working-directory: temp_build/Facilys
        run: |
          dotnet restore
          electronize build /target ${{ matrix.platform }}

      - name: Verify build output
        working-directory: temp_build/Facilys/bin/desktop
        run: |
          # Vérification multi-OS
          if [ "${{ runner.os }}" = "Linux" ]; then
            if [ ! -d "${{ matrix.outputFolder }}" ] || [ -z "$(ls -A ${{ matrix.outputFolder }})" ]; then
              echo "ERREUR: Dossier ${{ matrix.outputFolder }} introuvable ou vide!"
              ls -la
              exit 1
            fi
          else
            if (-not (Test-Path ${{ matrix.outputFolder }})) -or (-not (Get-ChildItem ${{ matrix.outputFolder }})) {
              Write-Host "ERREUR: Dossier ${{ matrix.outputFolder }} introuvable ou vide!"
              Get-ChildItem
              exit 1
            }
          fi
        shell: bash

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-${{ matrix.platform }}-build
          path: temp_build/Facilys/bin/desktop/${{ matrix.outputFolder }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: electron-*-build

      - name: Verify downloaded files
        run: |
          echo "Contenu des artefacts :"
          find artifacts -type f
          if [ -z "$(find artifacts -type f)" ]; then
            echo "Aucun fichier à déployer!"
            exit 1
          fi
        shell: bash

      - name: Deploy to PlanetHoster
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.PORT || 22 }}
          source: "artifacts/**/*"
          target: "/server/public/setup"
          strip_components: 0
          recursive: true