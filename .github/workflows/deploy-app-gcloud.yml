name: Deploy Blazor Server to Cloud Run

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: "myprojectfacilys"
  SERVICE_NAME: "blazor-server-app"
  REGION: "europe-west1"
  ARTIFACT_REGISTRY: "europe-west1-docker.pkg.dev/myprojectfacilys/facilys-repo"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: 'projects/403108519742/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
        service_account: 'github-actions-deploy-2@myprojectfacilys.iam.gserviceaccount.com'

    - name: Setup Docker Auth
      run: |-
        gcloud auth configure-docker $REGION-docker.pkg.dev

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.ARTIFACT_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          ${{ env.ARTIFACT_REGISTRY }}/${{ env.SERVICE_NAME }}:latest

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE_NAME }}
        image: ${{ env.ARTIFACT_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        region: ${{ env.REGION }}
        credentials: ${{ secrets.GCP_SA_KEY }}
        env_vars: "PORT=8080"
        flags: |
          --cpu=1
          --memory=2Gi
          --min-instances=0
          --max-instances=5
          --timeout=300s
          --ingress=all
          --revision-suffix=${{ github.sha[:7] }}
          --labels=commit=${{ github.sha }},env=prod
          --allow-unauthenticated
          --port=8080  

    - name: Clean Old Images
      if: success()
      run: |
        gcloud artifacts docker images delete ${{ env.ARTIFACT_REGISTRY }}/${{ env.SERVICE_NAME }} \
          --delete-tags --quiet \
          --filter="TAGS!=latest AND createTime<$(date -d '-7 days' +%Y-%m-%d)"